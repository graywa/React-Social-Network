{"version":3,"sources":["components/HOC/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","authUser","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","path","id","className","classes","dialog","activeClassName","active","name","Message","message","TextArea","Element","maxLength14","maxLengthCreator","MessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","required","placeholder","Dialogs","dialogsPage","dialogsElements","dialogsData","map","messagesElements","messagesData","dialogs","messages","newMessage","values","sendMessage","compose","dispatch","newMessageActionCreator","reset"],"mappings":"4NAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,SAASD,SAGdE,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAIC,KAAKC,MAAMN,OACR,cAACG,EAAD,eAAeE,KAAKC,QADG,cAAC,IAAD,CAAUC,GAAI,eAHT,GACXC,IAAML,WAOtC,OADqCM,YAAQX,EAARW,CAAqCL,K,oBCd9EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,WAAa,4BAA4B,MAAQ,yB,6FCWjOC,EARI,SAACN,GAClB,IAAIO,EAAO,YAAcP,EAAMQ,GAE/B,OAAO,qBAAKC,UAAWC,IAAQC,OAAxB,SACL,cAAC,IAAD,CAASV,GAAIM,EAAMK,gBAAiBF,IAAQG,OAA5C,SAAsDb,EAAMc,UCAjDC,EAJC,SAACf,GACf,OAAO,qBAAKS,UAAWC,IAAQM,QAAxB,SAAkChB,EAAMgB,W,kCCE3CC,EAAWC,YAAQ,YAEnBC,EAAcC,YAAiB,IAoB/BC,EAAmBC,YAAU,CACjCC,KAAM,WADiBD,EAlBL,SAACtB,GACnB,OACE,uBAAMwB,SAAUxB,EAAMyB,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CACEZ,KAAK,aACLa,UAAWV,EACXW,SAAU,CAACC,IAAUV,GACrBW,YAAY,YAGhB,8BACE,kDA4COC,EAlCC,SAAC/B,GAEf,IAAIP,EAAQO,EAAMgC,YAEdC,EAAkBxC,EAAMyC,YACzBC,KAAI,SAAAxB,GAAM,OAAI,cAAC,EAAD,CAAYG,KAAMH,EAAOG,KAAMN,GAAIG,EAAOH,IAASG,EAAOH,OAEvE4B,EAAmB3C,EAAM4C,aAC1BF,KAAI,SAAAnB,GAAO,OAAI,cAAC,EAAD,CAASA,QAASA,EAAQA,SAAcA,EAAQR,OAMlE,OACE,sBAAKC,UAAWC,IAAQ4B,QAAxB,UACE,8BACGL,IAGH,sBAAKxB,UAAWC,IAAQ6B,SAAxB,UACE,8BACGH,IAEH,qBAAK3B,UAAWC,IAAQ8B,WAAxB,SACE,cAACnB,EAAD,CACEG,SAhBU,SAACiB,GACnBzC,EAAM0C,YAAYD,EAAOD,wB,iCCvBdG,sBACbxC,aAfoB,SAACV,GAAD,MAAY,CAC9BuC,YAAavC,EAAMuC,gBAGE,SAACY,GACxB,MAAO,CACLF,YAAa,SAACF,GACZI,EAASC,YAAwBL,IACjCI,EAASE,YAAM,iBAQnBlD,IAFa+C,CAGbZ","file":"static/js/4.85f7fcd0.chunk.js","sourcesContent":["import {Redirect} from \"react-router-dom\"\r\nimport React from \"react\"\r\nimport {connect} from \"react-redux\"\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.authUser.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if(!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3yLRr\",\"dialog\":\"Dialogs_dialog__1Sgp-\",\"active\":\"Dialogs_active__2Dtta\",\"messages\":\"Dialogs_messages__1znFC\",\"message\":\"Dialogs_message__2KJ3q\",\"newMessage\":\"Dialogs_newMessage__10tr9\",\"users\":\"Dialogs_users__iVcZG\"};","import React from \"react\"\r\nimport classes from \"./../Dialogs.module.css\"\r\nimport {NavLink} from \"react-router-dom\"\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n\r\n  return <div className={classes.dialog}>\r\n    <NavLink to={path} activeClassName={classes.active} >{props.name}</NavLink>\r\n  </div>\r\n}\r\n\r\nexport default DialogItem","import React from \"react\"\r\nimport classes from \"./../Dialogs.module.css\"\r\n\r\n\r\nconst Message = (props) => {\r\n  return <div className={classes.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message","import classes from \"./Dialogs.module.css\"\r\nimport DialogItem from \"./DialogItem/DialogItem\"\r\nimport Message from \"./Message/Message\"\r\nimport {reduxForm, Field} from \"redux-form\"\r\nimport {required, maxLengthCreator} from \"../utilities/validators\"\r\nimport {Element} from \"../common/FormsControl/FormsControl\"\r\n\r\nconst TextArea = Element('textarea')\r\n\r\nconst maxLength14 = maxLengthCreator(14)\r\n\r\nconst MessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          name='newMessage'\r\n          component={TextArea}\r\n          validate={[required, maxLength14]}\r\n          placeholder='Hello'\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst MessageFormRedux = reduxForm({\r\n  form: 'message'\r\n})(MessageForm)\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let state = props.dialogsPage\r\n\r\n  let dialogsElements = state.dialogsData\r\n    .map(dialog => <DialogItem name={dialog.name} id={dialog.id} key={dialog.id}/>)\r\n\r\n  let messagesElements = state.messagesData\r\n    .map(message => <Message message={message.message} key={message.id}/>)\r\n\r\n  let onSendMessage = (values) => {\r\n    props.sendMessage(values.newMessage)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.dialogs}>\r\n      <div>\r\n        {dialogsElements}\r\n      </div>\r\n\r\n      <div className={classes.messages}>\r\n        <div>\r\n          {messagesElements}\r\n        </div>\r\n        <div className={classes.newMessage}>\r\n          <MessageFormRedux\r\n            onSubmit={onSendMessage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs","import {newMessageActionCreator} from \"../../redux/dialogsReducer\"\r\nimport Dialogs from \"./Dialogs\"\r\nimport {connect} from \"react-redux\"\r\nimport {withAuthRedirect} from \"../HOC/withAuthRedirect\"\r\nimport {compose} from \"redux\"\r\nimport {reset} from 'redux-form'\r\n\r\nlet mapStateToProps = (state) => ({\r\n    dialogsPage: state.dialogsPage,\r\n})\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessage) => {\r\n      dispatch(newMessageActionCreator(newMessage))\r\n      dispatch(reset('message'))\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}