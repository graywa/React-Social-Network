[{"E:\\React__Samurai\\projects\\01\\my-app\\src\\index.tsx":"1","E:\\React__Samurai\\projects\\01\\my-app\\src\\reportWebVitals.js":"2","e:\\React__Samurai\\projects\\01\\my-app\\src\\index.tsx":"3","e:\\React__Samurai\\projects\\01\\my-app\\src\\reportWebVitals.js":"4","e:\\React__Samurai\\projects\\01\\my-app\\src\\Header.js":"5","E:\\React__Samurai\\projects\\01\\my-app\\src\\Header.js":"6","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Header\\Header.tsx":"7","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Navbar\\Navbar.tsx":"8","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"9","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"10","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"11","E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\store.js":"12","E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\profileReducer.ts":"13","E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\redux-store.ts":"14","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"15","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Users\\Users.tsx":"16","E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\usersReducer.ts":"17","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\common\\Preloader\\Preloader.tsx":"18","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\Profile.tsx":"19","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Header\\HeaderContainer.tsx":"20","E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\AppReducer.ts":"21","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Login\\Login.tsx":"22","E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\usersSelectors.ts":"23","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\utilities\\validators.ts":"24","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\HOC\\withAuthRedirect.tsx":"25","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\common\\FormsControl\\FormsControl.tsx":"26","E:\\React__Samurai\\projects\\01\\my-app\\src\\API\\api.ts":"27","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Users\\User.tsx":"28","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Users\\Paginator.tsx":"29","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx":"30","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\HOC\\withSuspense.tsx":"31","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx":"32","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"33","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.tsx":"34","E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\AuthReducer.ts":"35","E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\dialogsReducer.ts":"36","E:\\React__Samurai\\projects\\01\\my-app\\src\\API\\users-api.ts":"37","E:\\React__Samurai\\projects\\01\\my-app\\src\\API\\auth-api.ts":"38","E:\\React__Samurai\\projects\\01\\my-app\\src\\API\\profile-api.ts":"39","E:\\React__Samurai\\projects\\01\\my-app\\src\\API\\security-api.ts":"40","E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\appReducer.ts":"41","E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\authReducer.ts":"42","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx":"43","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Dialogs\\Dialogs.tsx":"44","E:\\React__Samurai\\projects\\01\\my-app\\src\\App.tsx":"45","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\News\\News.tsx":"46","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Music\\Music.tsx":"47","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Settings\\Settings.tsx":"48","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Users\\UsersSearchForm.tsx":"49","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Users\\UsersPage.tsx":"50","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\ProfileContainer.tsx":"51","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Chat\\ChatPage.tsx":"52","E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\chatReducer.ts":"53","E:\\React__Samurai\\projects\\01\\my-app\\src\\API\\chat-api.ts":"54"},{"size":339,"mtime":1633526326341,"results":"55","hashOfConfig":"56"},{"size":362,"mtime":499162500000,"results":"57","hashOfConfig":"58"},{"size":500,"mtime":499162500000,"results":"59","hashOfConfig":"60"},{"size":362,"mtime":499162500000,"results":"61","hashOfConfig":"60"},{"size":228,"mtime":1610376971930,"results":"62","hashOfConfig":"60"},{"size":228,"mtime":1610376971930,"results":"63","hashOfConfig":"58"},{"size":976,"mtime":1633610474694,"results":"64","hashOfConfig":"56"},{"size":1137,"mtime":1634388491225,"results":"65","hashOfConfig":"56"},{"size":1869,"mtime":1633772467437,"results":"66","hashOfConfig":"56"},{"size":553,"mtime":1633593990450,"results":"67","hashOfConfig":"56"},{"size":3835,"mtime":1634052352768,"results":"68","hashOfConfig":"56"},{"size":1909,"mtime":1619683459324,"results":"69","hashOfConfig":"58"},{"size":4300,"mtime":1633599918861,"results":"70","hashOfConfig":"56"},{"size":1327,"mtime":1634562333954,"results":"71","hashOfConfig":"56"},{"size":798,"mtime":1633726999231,"results":"72","hashOfConfig":"56"},{"size":2994,"mtime":1634068133222,"results":"73","hashOfConfig":"56"},{"size":4103,"mtime":1633894202686,"results":"74","hashOfConfig":"56"},{"size":300,"mtime":1633603861076,"results":"75","hashOfConfig":"56"},{"size":936,"mtime":1634052255331,"results":"76","hashOfConfig":"56"},{"size":1296,"mtime":1633610474676,"results":"77","hashOfConfig":"56"},{"size":899,"mtime":1633377072780,"results":"78","hashOfConfig":"56"},{"size":2508,"mtime":1634565935678,"results":"79","hashOfConfig":"56"},{"size":748,"mtime":1633945847998,"results":"80","hashOfConfig":"56"},{"size":385,"mtime":1633023371943,"results":"81","hashOfConfig":"56"},{"size":1077,"mtime":1633608459331,"results":"82","hashOfConfig":"56"},{"size":671,"mtime":1633634143279,"results":"83","hashOfConfig":"56"},{"size":486,"mtime":1633371567236,"results":"84","hashOfConfig":"56"},{"size":1885,"mtime":1633458619455,"results":"85","hashOfConfig":"56"},{"size":1546,"mtime":1633604618693,"results":"86","hashOfConfig":"56"},{"size":1313,"mtime":1633595212120,"results":"87","hashOfConfig":"56"},{"size":270,"mtime":1633448087912,"results":"88","hashOfConfig":"56"},{"size":265,"mtime":1633603708116,"results":"89","hashOfConfig":"56"},{"size":430,"mtime":1633603787324,"results":"90","hashOfConfig":"56"},{"size":2038,"mtime":1633771628108,"results":"91","hashOfConfig":"56"},{"size":2706,"mtime":1633377021725,"results":"92","hashOfConfig":"56"},{"size":1102,"mtime":1633441741233,"results":"93","hashOfConfig":"56"},{"size":828,"mtime":1633945847998,"results":"94","hashOfConfig":"56"},{"size":806,"mtime":1633371669898,"results":"95","hashOfConfig":"56"},{"size":979,"mtime":1633380947250,"results":"96","hashOfConfig":"56"},{"size":267,"mtime":1633372476816,"results":"97","hashOfConfig":"56"},{"size":839,"mtime":1633728078419,"results":"98","hashOfConfig":"56"},{"size":2727,"mtime":1633947161489,"results":"99","hashOfConfig":"56"},{"size":587,"mtime":1633447220438,"results":"100","hashOfConfig":"56"},{"size":2145,"mtime":1633443195352,"results":"101","hashOfConfig":"56"},{"size":2577,"mtime":1634388332944,"results":"102","hashOfConfig":"56"},{"size":167,"mtime":1633606810637,"results":"103","hashOfConfig":"56"},{"size":171,"mtime":1633606810658,"results":"104","hashOfConfig":"56"},{"size":187,"mtime":1633606810617,"results":"105","hashOfConfig":"56"},{"size":1816,"mtime":1634066811954,"results":"106","hashOfConfig":"56"},{"size":426,"mtime":1634049225067,"results":"107","hashOfConfig":"56"},{"size":1998,"mtime":1634052201982,"results":"108","hashOfConfig":"56"},{"size":1950,"mtime":1634565944010,"results":"109","hashOfConfig":"56"},{"size":1717,"mtime":1634566438217,"results":"110","hashOfConfig":"56"},{"size":1352,"mtime":1634565003206,"results":"111","hashOfConfig":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"uixcj1",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},"fp78h3",{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7wzx3g",{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"114"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"114"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"114"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"114"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"114"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"114"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"212","usedDeprecatedRules":"114"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"114"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"114"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"114"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"114"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"E:\\React__Samurai\\projects\\01\\my-app\\src\\index.tsx",[],["235","236"],"E:\\React__Samurai\\projects\\01\\my-app\\src\\reportWebVitals.js",[],["237","238"],"e:\\React__Samurai\\projects\\01\\my-app\\src\\index.tsx",[],"e:\\React__Samurai\\projects\\01\\my-app\\src\\reportWebVitals.js",[],"e:\\React__Samurai\\projects\\01\\my-app\\src\\Header.js",["239","240","241"],"E:\\React__Samurai\\projects\\01\\my-app\\src\\Header.js",["242","243","244"],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Header\\Header.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Navbar\\Navbar.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["245","246"],"import React, {ChangeEvent, useState} from 'react'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport classes from './ProfileInfo.module.css'\r\nimport job__img from './../../../img/job.jpg'\r\nimport noJob__img from './../../../img/noJob.png'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\nimport user__img from '../../../img/users/user.png'\r\nimport ProfileDataForm from './ProfileDataForm'\r\nimport {ContactType, ProfileType} from '../../../types/Types'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AppStateType } from '../../../redux/redux-store'\r\nimport { savePhoto, saveProfile, updateUserStatus } from '../../../redux/profileReducer'\r\n\r\n\r\ntype PropsType = {  \r\n  isOwner: boolean   \r\n}\r\n\r\nexport const ProfileInfo: React.FC<PropsType> = (props) => {\r\n\r\n  const profile = useSelector((state: AppStateType) => state.profilePage.profile)\r\n  const status = useSelector((state: AppStateType) => state.profilePage.status)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const saveUserPhoto = (file: File) => {\r\n    dispatch(savePhoto(file))\r\n  }\r\n\r\n  \r\n  const saveUserProfile = (profile: ProfileType) => {\r\n    dispatch(saveProfile(profile)) \r\n  }\r\n  const updUserStatus = (status: string) => {\r\n    dispatch(updateUserStatus(status))\r\n  }\r\n\r\n  const [editMode, setEditMode] = useState(false)\r\n\r\n  if (!profile) {\r\n    return <Preloader/>\r\n  }\r\n\r\n  const onSelectPhoto = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files?.length) {\r\n      saveUserPhoto(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  const onSubmit = (formData: ProfileType) => {\r\n    saveProfile(formData).then(\r\n      () => setEditMode(false)\r\n    )\r\n  }\r\n\r\n  return <div>\r\n    <div className={classes.container}>\r\n\r\n      <div>\r\n        <img className={classes.userPhoto} src={profile.photos.large || user__img}/>\r\n        <div>\r\n          {props.isOwner && <label className={classes.labelInput}><input\r\n            type=\"file\" onChange={onSelectPhoto}/>choose a photo</label>}\r\n        </div>\r\n      </div>\r\n      {editMode\r\n        ? <ProfileDataForm initialValues={profile}\r\n                           onSubmit={onSubmit}\r\n                           profile={profile}\r\n        />\r\n        : <ProfileData profile={profile}\r\n                       isOwner={props.isOwner}\r\n                       status={status}\r\n                       updateUserStatus={updUserStatus}\r\n                       onEditMode={() => setEditMode(true)}\r\n        />}\r\n    </div>\r\n\r\n    <div className={classes.cover}>\r\n      <img className={classes.cover__img} src=\"https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__340.jpg\"\r\n           alt=\"\"/>\r\n    </div>\r\n  </div>\r\n}\r\n\r\ntype ProfileDataProps = {\r\n  profile: ProfileType\r\n  status: string\r\n  isOwner: boolean\r\n  updateUserStatus: (status: string) => void\r\n  onEditMode: () => void\r\n}\r\n\r\nconst ProfileData: React.FC<ProfileDataProps> = (props) => {\r\n  return <div className={classes.description}>\r\n    <div>\r\n      <b>Name:</b> {props.profile.fullName}\r\n    </div>\r\n    <div>\r\n      <b>About me:</b> {props.profile.aboutMe}\r\n    </div>\r\n    <div>\r\n      <div className={classes.status}>\r\n        <ProfileStatusWithHooks\r\n          status={props.status}\r\n          updateUserStatus={props.updateUserStatus}\r\n          isOwner={props.isOwner}\r\n        />\r\n      </div>\r\n      <div className={classes.contacts}>\r\n        <b>Contacts:</b>\r\n        {Object.keys(props.profile.contacts).map(key => {\r\n          return <Contact\r\n            key={key} contactTitle={key} contactValue={props.profile.contacts[key as keyof ContactType]}/>\r\n        })}\r\n      </div>\r\n      <div>\r\n        <img src={props.profile.lookingForAJob ? job__img : noJob__img} alt=\"\"/>{}\r\n      </div>\r\n      {props.profile.lookingForAJob && <div>\r\n        <b>My professional skills:</b> {props.profile.lookingForAJobDescription}\r\n      </div>}\r\n    </div>\r\n    {props.isOwner && <div className={classes.btnSave}>\r\n      <button onClick={props.onEditMode}>edit</button>\r\n    </div>}\r\n  </div>\r\n}\r\n\r\ntype ContactProps = {\r\n  contactTitle: string\r\n  contactValue: string\r\n}\r\n\r\nconst Contact: React.FC<ContactProps> = ({contactTitle, contactValue}) => {\r\n  return <div className={classes.contact}><a href={contactValue}>{contactTitle}</a></div>\r\n}\r\n","E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\store.js",[],["247","248"],"E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\profileReducer.ts",["249"],"import {stopSubmit} from 'redux-form'\r\nimport {PhotosType, PostDataType, ProfileType} from '../types/Types'\r\nimport {AppStateType, BaseThunkType, InferActionsTypes} from './redux-store'\r\nimport {profileAPI} from '../API/profile-api'\r\n\r\n\r\nlet initialState = {\r\n  postsData: [\r\n    {id: 1, message: 'Why is it so difficult?', likesCount: 221},\r\n    {id: 2, message: 'I learn English sometimes', likesCount: 85},\r\n    {id: 3, message: 'Good morning night city ', likesCount: 4},\r\n    {id: 4, message: 'I played football every day ', likesCount: 33},\r\n    {id: 5, message: 'I\\'m twenty_five ', likesCount: 15},\r\n  ] as Array<PostDataType>,\r\n  profile: null as ProfileType | null,\r\n  userAva: null as string | null,\r\n  status: ''\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\ntype ActionsTypes = InferActionsTypes<typeof actionCreatorsProfile>\r\ntype ThunkType = BaseThunkType<ActionsTypes | ReturnType<typeof stopSubmit>>\r\n\r\nconst profileReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'ADD_POST': {\r\n      return {\r\n        ...state,\r\n        postsData: [...state.postsData, {id: 6, message: action.newMessage, likesCount: 0}]\r\n      }\r\n    }\r\n    case 'SET_PROFILE': {\r\n      return {...state, profile: action.profile}\r\n    }\r\n    case 'SET_USER_AVA': {\r\n      if (!action.profile) return {...state, userAva: null}\r\n      return {...state, userAva: action.profile.photos.small}\r\n    }\r\n    case 'SET_USER_STATUS': {\r\n      return {...state, status: action.status}\r\n    }\r\n    case 'DELETE_POST': {\r\n      return {...state, postsData: state.postsData.filter(post => post.id !== action.id)}\r\n    }\r\n    case 'SET_USER_PHOTO': {\r\n      return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const actionCreatorsProfile = {\r\n  addPostActionCreator: (newMessage: string) => {return {type: 'ADD_POST', newMessage} as const},\r\n  deletePost: (id: number) => {return {type: 'DELETE_POST', id} as const},\r\n  setProfile: (profile: ProfileType) => ({type: 'SET_PROFILE', profile} as const),\r\n  setUserAva: (profile: ProfileType | null) => ({type: 'SET_USER_AVA', profile} as const),\r\n  setUserStatus: (status: string) => ({type: 'SET_USER_STATUS', status} as const),\r\n  setUserPhoto: (photos: PhotosType) => ({type: 'SET_USER_PHOTO', photos} as const)\r\n}\r\n\r\nexport const getUserProfile = (userId: number | null): ThunkType => {\r\n  return async (dispatch) => {\r\n    const data = await profileAPI.getProfile(userId)\r\n    dispatch(actionCreatorsProfile.setProfile(data))\r\n  }\r\n}\r\n\r\nexport const getUserAva = (userId: number): ThunkType => {\r\n  return async (dispatch) => {\r\n    const response = await profileAPI.getProfile(userId)\r\n    dispatch(actionCreatorsProfile.setUserAva(response))\r\n  }\r\n}\r\n\r\nexport const getUserStatus = (userId: number): ThunkType => {\r\n  return async (dispatch) => {\r\n    const response = await profileAPI.getUserStatus(userId)\r\n    dispatch(actionCreatorsProfile.setUserStatus(response))\r\n  }\r\n}\r\n\r\nexport const updateUserStatus = (status: string): ThunkType => {\r\n  return async (dispatch) => {\r\n    const response = await profileAPI.updateUserStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(actionCreatorsProfile.setUserStatus(status))\r\n    }\r\n  }\r\n}\r\n\r\nexport const savePhoto = (file: File): ThunkType => {\r\n  return async (dispatch) => {\r\n    const response = await profileAPI.savePhoto(file)\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(actionCreatorsProfile.setUserPhoto(response.data.data.photos))\r\n    }\r\n  }\r\n}\r\n\r\nexport const saveProfile = (profile: ProfileType): ThunkType => {\r\n  return async (dispatch, getState) => {\r\n    const userId = getState().authUser.userId\r\n    const response = await profileAPI.saveProfile(profile)\r\n    if (response.data.resultCode === 0) {\r\n      if (userId !== null) {\r\n        dispatch(getUserProfile(userId))\r\n      } else {\r\n        throw new Error('userId can not be null')\r\n      }\r\n    } else {\r\n      let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n      dispatch(stopSubmit('editProfile', {_error: message}))\r\n      return Promise.reject(message)\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default profileReducer","E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\redux-store.ts",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["250"],"import {actionCreatorsProfile} from '../../../redux/profileReducer'\r\nimport MyPosts, {DispatchPropsType, MapPropsType} from './MyPosts'\r\nimport {connect} from 'react-redux'\r\nimport {reset} from 'redux-form'\r\nimport {AppStateType} from '../../../redux/redux-store'\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType) => ({\r\n  posts: state.profilePage.postsData,\r\n})\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     addPost: (postArea) => {\r\n//       dispatch(actionCreatorsProfile.addPostActionCreator(postArea))\r\n//       dispatch(reset('myPost'))\r\n//     }\r\n//   }\r\n// }\r\n\r\nconst MyPostsContainer = connect<MapPropsType, DispatchPropsType, {}, AppStateType>(mapStateToProps, {\r\n  addPost: actionCreatorsProfile.addPostActionCreator\r\n})(MyPosts)\r\n\r\nexport default MyPostsContainer","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Users\\Users.tsx",["251","252"],"import React, {useEffect} from 'react'\r\nimport User from './User'\r\nimport Paginator from './Paginator'\r\nimport {UsersSearchForm} from './UsersSearchForm'\r\nimport {\r\n  FilterType,\r\n  follow,\r\n  getUsers,\r\n  unfollow,\r\n} from '../../redux/usersReducer'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {\r\n  getCurrentPage,\r\n  getFollowInProgress,\r\n  getTotalUsers,\r\n  getUsersData,\r\n  getUsersFilter,\r\n  getUsersOnPage,\r\n} from '../../redux/usersSelectors'\r\nimport {useHistory} from 'react-router'\r\n\r\nexport const Users: React.FC = React.memo((props) => {\r\n  const usersOnPage = useSelector(getUsersOnPage)\r\n  const usersData = useSelector(getUsersData)\r\n  const totalUsers = useSelector(getTotalUsers)\r\n  const currentPage = useSelector(getCurrentPage)\r\n  const followInProgress = useSelector(getFollowInProgress)\r\n  const filter = useSelector(getUsersFilter)\r\n\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    const URLParams = new URLSearchParams(history.location.search)\r\n    let actualPage = currentPage\r\n    let actualFilter = filter\r\n\r\n    if (!!URLParams.get('page')) actualPage = Number(URLParams.get('page'))\r\n    if (!!URLParams.get('term'))\r\n      actualFilter = {...actualFilter, term: URLParams.get('term') as string}\r\n    if (!!URLParams.get('friend'))\r\n      actualFilter = {\r\n        ...actualFilter,\r\n        friend:\r\n          URLParams.get('friend') === 'null'\r\n            ? null\r\n            : URLParams.get('friend') === 'true'\r\n              ? true\r\n              : false,\r\n      }\r\n\r\n    dispatch(getUsers(actualPage, usersOnPage, actualFilter))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    history.push({\r\n      pathname: '/users',\r\n      search: `?term=${filter.term}&friend=${filter.friend}&page=${currentPage}`,\r\n    })\r\n  }, [filter, currentPage])\r\n\r\n  const onFilterChanged = (filter: FilterType) => {\r\n    dispatch(getUsers(1, usersOnPage, filter))\r\n  }\r\n  const onPageChanged = (page: number) => {\r\n    dispatch(getUsers(page, usersOnPage, filter))\r\n  }\r\n  const followUser = (userId: number) => {\r\n    dispatch(follow(userId))\r\n  }\r\n  const unfollowUser = (userId: number) => {\r\n    dispatch(unfollow(userId))\r\n  }\r\n\r\n  const PaginatorWithProps = () => {\r\n    return (\r\n      <Paginator\r\n        usersOnPage={usersOnPage}\r\n        totalUsers={totalUsers}\r\n        currentPage={currentPage}\r\n        onPageChanged={onPageChanged}\r\n        portionSize={15}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <UsersSearchForm onFilterChanged={onFilterChanged}/>\r\n\r\n      {PaginatorWithProps()}\r\n\r\n      { usersData.length\r\n        ? (usersData.map((u) => (\r\n            <User\r\n              user={u}\r\n              key={u.id}\r\n              followInProgress={followInProgress}\r\n              follow={followUser}\r\n              unfollow={unfollowUser}\r\n            />\r\n          )))\r\n        : <h1 style={{textAlign: 'center'}}>Users not found</h1>\r\n      }\r\n\r\n      {PaginatorWithProps()}\r\n    </div>\r\n  )\r\n})\r\n","E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\usersReducer.ts",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\common\\Preloader\\Preloader.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\Profile.tsx",["253"],"import React from 'react'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\nimport {ProfileType} from '../../types/Types'\r\nimport {AppStateType} from '../../redux/redux-store'\r\n\r\ntype PropsType = {\r\n  profile: ProfileType | null\r\n  isOwner: boolean\r\n  status: string\r\n  savePhoto: (file: File) => void\r\n  saveProfile: (profile: ProfileType) => Promise<any>\r\n  updateUserStatus: (status: string) => void\r\n}\r\n\r\n\r\nconst Profile: React.FC<PropsType> = (props) => {\r\n\r\n  return <div>\r\n    <ProfileInfo\r\n      profile={props.profile}\r\n      status={props.status}\r\n      updateUserStatus={props.updateUserStatus}\r\n      isOwner={props.isOwner}\r\n      savePhoto={props.savePhoto}\r\n      saveProfile={props.saveProfile}\r\n    />\r\n    {/*{props.isOwner && <MyPostsContainer store={props.store} />}*/}\r\n    {props.isOwner && <MyPostsContainer />}\r\n  </div>\r\n}\r\n\r\nexport default Profile","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Header\\HeaderContainer.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\AppReducer.ts",[],["254","255"],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Login\\Login.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\usersSelectors.ts",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\utilities\\validators.ts",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\HOC\\withAuthRedirect.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\common\\FormsControl\\FormsControl.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\API\\api.ts",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Users\\User.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Users\\Paginator.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\HOC\\withSuspense.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\AuthReducer.ts",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\dialogsReducer.ts",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\API\\users-api.ts",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\API\\auth-api.ts",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\API\\profile-api.ts",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\API\\security-api.ts",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\appReducer.ts",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\authReducer.ts",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx",["256"],"import React from 'react'\r\nimport {actionCreators} from '../../redux/dialogsReducer'\r\nimport Dialogs from './Dialogs'\r\nimport {connect} from 'react-redux'\r\nimport {withAuthRedirect} from '../HOC/withAuthRedirect'\r\nimport {compose} from 'redux'\r\nimport {reset} from 'redux-form'\r\nimport {AppStateType} from '../../redux/redux-store'\r\n\r\nlet mapStateToProps = (state: AppStateType) => ({\r\n  dialogsPage: state.dialogsPage,\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect(mapStateToProps, {\r\n    newMessageAC: actionCreators.newMessageAC\r\n  }),\r\n  withAuthRedirect\r\n)(Dialogs)","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Dialogs\\Dialogs.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\App.tsx",["257"],"﻿import './App.css'\r\nimport Navbar from './components/Navbar/Navbar'\r\nimport Music from './components/Music/Music'\r\nimport News from './components/News/News'\r\nimport Settings from './components/Settings/Settings'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport React, {Component} from 'react'\r\nimport { UsersPage } from './components/Users/UsersPage'\r\nimport HeaderContainer from './components/Header/HeaderContainer'\r\nimport {LoginPage} from './components/Login/Login'\r\nimport {connect} from 'react-redux'\r\nimport {initializeApp} from './redux/appReducer'\r\nimport Preloader from './components/common/Preloader/Preloader'\r\nimport {withSuspense} from './components/HOC/withSuspense'\r\nimport {AppStateType} from './redux/redux-store'\r\n\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\r\nconst ChatPage = React.lazy(() => import('./components/Chat/ChatPage'))\r\n\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>\r\ntype DispatchPropsType = { initializeApp: () => void }\r\n\r\nconst SuspendedDialogs = withSuspense(DialogsContainer)\r\nconst SuspendedProfile = withSuspense(ProfileContainer)\r\nconst SuspendedChatPage = withSuspense(ChatPage)\r\n\r\nclass App extends Component <MapPropsType & DispatchPropsType> {\r\n  componentDidMount() {\r\n    this.props.initializeApp()\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initialized) return <Preloader />\r\n\r\n\r\n    return (\r\n      <div className=\"app-wrapper\">\r\n        <HeaderContainer/>\r\n        <Navbar/>\r\n        <div className=\"app-wrapper-content\">\r\n          <Switch>\r\n            <Route exact path=\"/\" render={() => <Redirect to=\"/profile\"/>} />\r\n            <Route path=\"/dialogs\" render={() => <SuspendedDialogs/>} />\r\n            <Route path=\"/profile/:userId?\" render={() => <SuspendedProfile/>} />\r\n            <Route path=\"/chat\" render={() => <SuspendedChatPage/>} />\r\n            <Route path=\"/users\" render={() => <UsersPage/>} />\r\n            <Route path=\"/login\" render={() => <LoginPage/>} />\r\n            <Route path=\"/music\" component={Music} />\r\n            <Route path=\"/news\" component={News} />\r\n            <Route path=\"/settings\" component={Settings} />\r\n            <Route path=\"*\" render={() => <div>404 page not found</div>} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n  initialized: state.app.initialized,\r\n})\r\n\r\nexport default connect(mapStateToProps, {initializeApp})(App)\r\n\r\n","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\News\\News.tsx",["258"],"import React from 'react'\r\nimport classes from './News.module.css'\r\n\r\nconst News: React.FC = (props) => {\r\n  return <div>\r\n    News\r\n  </div>\r\n}\r\n\r\nexport default News","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Music\\Music.tsx",["259"],"import React from 'react'\r\nimport classes from './Music.module.css'\r\n\r\nconst Music: React.FC = (props) => {\r\n  return <div>\r\n    Music\r\n  </div>\r\n}\r\n\r\nexport default Music","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Settings\\Settings.tsx",["260"],"import React from 'react'\r\nimport classes from './Settings.module.css'\r\n\r\n\r\n\r\nconst Settings: React.FC = (props) => {\r\n  return <div>\r\n    Settings\r\n  </div>\r\n}\r\n\r\nexport default Settings","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Users\\UsersSearchForm.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Users\\UsersPage.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\ProfileContainer.tsx",["261"],"import React from 'react'\r\nimport Profile from './Profile'\r\nimport {connect} from 'react-redux'\r\nimport {getUserProfile, getUserStatus, savePhoto, updateUserStatus, saveProfile} from '../../redux/profileReducer'\r\nimport {Redirect, RouteComponentProps, withRouter} from 'react-router-dom'\r\nimport {withAuthRedirect} from '../HOC/withAuthRedirect'\r\nimport {compose} from 'redux'\r\nimport {AppStateType} from '../../redux/redux-store'\r\nimport {ProfileType} from '../../types/Types'\r\n\r\n\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>\r\ntype DispatchPropsType = {\r\n  getUserProfile: (userId: number) => void\r\n  getUserStatus: (userId: number) => void\r\n  savePhoto: (file: File) => void\r\n  saveProfile: (profile: ProfileType) => Promise<any>\r\n  updateUserStatus: (status: string) => void\r\n}\r\ntype PathParamsType = {\r\n  userId: string\r\n}\r\n\r\ntype PropsType = MapPropsType & DispatchPropsType & RouteComponentProps<PathParamsType>\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n  refreshProfile () {\r\n    let userId: number | null = +this.props.match.params.userId\r\n    if (!userId) userId = this.props.userId\r\n    if (!userId)  this.props.history.push('/login')\r\n    this.props.getUserProfile(userId as number)\r\n    this.props.getUserStatus(userId as number)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile()\r\n  }\r\n\r\n  componentDidUpdate(prevProps: PropsType) {\r\n    if(this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <Profile {...this.props}\r\n      isOwner={!this.props.match.params.userId}\r\n    />\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  userId: state.authUser.userId,\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile}),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer)","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Chat\\ChatPage.tsx",["262"],"E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\chatReducer.ts",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\API\\chat-api.ts",[],{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","replacedBy":"266"},{"ruleId":"263","replacedBy":"267"},{"ruleId":"265","replacedBy":"268"},{"ruleId":"269","severity":1,"message":"270","line":5,"column":13,"nodeType":"271","endLine":5,"endColumn":24},{"ruleId":"269","severity":1,"message":"270","line":6,"column":13,"nodeType":"271","endLine":6,"endColumn":24},{"ruleId":"269","severity":1,"message":"270","line":7,"column":13,"nodeType":"271","endLine":7,"endColumn":24},{"ruleId":"269","severity":1,"message":"270","line":5,"column":13,"nodeType":"271","endLine":5,"endColumn":24},{"ruleId":"269","severity":1,"message":"270","line":6,"column":13,"nodeType":"271","endLine":6,"endColumn":24},{"ruleId":"269","severity":1,"message":"270","line":7,"column":13,"nodeType":"271","endLine":7,"endColumn":24},{"ruleId":"272","severity":1,"message":"273","line":31,"column":9,"nodeType":"274","messageId":"275","endLine":31,"endColumn":24},{"ruleId":"276","severity":1,"message":"277","line":60,"column":9,"nodeType":"271","endLine":60,"endColumn":85},{"ruleId":"263","replacedBy":"278"},{"ruleId":"265","replacedBy":"279"},{"ruleId":"272","severity":1,"message":"280","line":3,"column":9,"nodeType":"274","messageId":"275","endLine":3,"endColumn":21},{"ruleId":"272","severity":1,"message":"281","line":4,"column":9,"nodeType":"274","messageId":"275","endLine":4,"endColumn":14},{"ruleId":"282","severity":1,"message":"283","line":53,"column":6,"nodeType":"284","endLine":53,"endColumn":8,"suggestions":"285"},{"ruleId":"282","severity":1,"message":"286","line":60,"column":6,"nodeType":"284","endLine":60,"endColumn":27,"suggestions":"287"},{"ruleId":"272","severity":1,"message":"280","line":5,"column":9,"nodeType":"274","messageId":"275","endLine":5,"endColumn":21},{"ruleId":"263","replacedBy":"288"},{"ruleId":"265","replacedBy":"289"},{"ruleId":"272","severity":1,"message":"281","line":7,"column":9,"nodeType":"274","messageId":"275","endLine":7,"endColumn":14},{"ruleId":"290","severity":1,"message":"291","line":1,"column":1,"nodeType":"292","messageId":"293","fix":"294"},{"ruleId":"272","severity":1,"message":"295","line":2,"column":8,"nodeType":"274","messageId":"275","endLine":2,"endColumn":15},{"ruleId":"272","severity":1,"message":"295","line":2,"column":8,"nodeType":"274","messageId":"275","endLine":2,"endColumn":15},{"ruleId":"272","severity":1,"message":"295","line":2,"column":8,"nodeType":"274","messageId":"275","endLine":2,"endColumn":15},{"ruleId":"272","severity":1,"message":"296","line":5,"column":9,"nodeType":"274","messageId":"275","endLine":5,"endColumn":17},{"ruleId":"282","severity":1,"message":"297","line":25,"column":6,"nodeType":"284","endLine":25,"endColumn":8,"suggestions":"298"},"no-native-reassign",["299"],"no-negated-in-lhs",["300"],["299"],["300"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","@typescript-eslint/no-unused-vars","'saveUserProfile' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["299"],["300"],"'AppStateType' is defined but never used.","'reset' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentPage', 'dispatch', 'filter', 'history.location.search', and 'usersOnPage'. Either include them or remove the dependency array.","ArrayExpression",["301"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["302"],["299"],["300"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"303","text":"304"},"'classes' is defined but never used.","'Redirect' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["305"],"no-global-assign","no-unsafe-negation",{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},[-1,0],"",{"desc":"310","fix":"311"},"Update the dependencies array to be: [currentPage, dispatch, filter, history.location.search, usersOnPage]",{"range":"312","text":"313"},"Update the dependencies array to be: [filter, currentPage, history]",{"range":"314","text":"315"},"Update the dependencies array to be: [dispatch]",{"range":"316","text":"317"},[1633,1635],"[currentPage, dispatch, filter, history.location.search, usersOnPage]",[1804,1825],"[filter, currentPage, history]",[606,608],"[dispatch]"]