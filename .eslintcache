[{"E:\\React__Samurai\\projects\\01\\my-app\\src\\index.tsx":"1","E:\\React__Samurai\\projects\\01\\my-app\\src\\reportWebVitals.js":"2","e:\\React__Samurai\\projects\\01\\my-app\\src\\index.tsx":"3","e:\\React__Samurai\\projects\\01\\my-app\\src\\reportWebVitals.js":"4","e:\\React__Samurai\\projects\\01\\my-app\\src\\Header.js":"5","E:\\React__Samurai\\projects\\01\\my-app\\src\\Header.js":"6","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Header\\Header.tsx":"7","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Navbar\\Navbar.tsx":"8","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"9","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"10","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"11","E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\store.js":"12","E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\profileReducer.ts":"13","E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\redux-store.ts":"14","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"15","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Users\\Users.tsx":"16","E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\usersReducer.ts":"17","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Users\\UsersContainer.tsx":"18","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\common\\Preloader\\Preloader.tsx":"19","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\ProfileContainer.tsx":"20","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\Profile.tsx":"21","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Header\\HeaderContainer.tsx":"22","E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\AppReducer.ts":"23","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Login\\Login.tsx":"24","E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\usersSelectors.ts":"25","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\utilities\\validators.ts":"26","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\HOC\\withAuthRedirect.tsx":"27","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\common\\FormsControl\\FormsControl.tsx":"28","E:\\React__Samurai\\projects\\01\\my-app\\src\\API\\api.ts":"29","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Users\\User.tsx":"30","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Users\\Paginator.tsx":"31","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx":"32","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx":"33","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\HOC\\withSuspense.tsx":"34","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx":"35","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"36","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.tsx":"37","E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\AuthReducer.ts":"38","E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\dialogsReducer.ts":"39","E:\\React__Samurai\\projects\\01\\my-app\\src\\API\\users-api.ts":"40","E:\\React__Samurai\\projects\\01\\my-app\\src\\API\\auth-api.ts":"41","E:\\React__Samurai\\projects\\01\\my-app\\src\\API\\profile-api.ts":"42","E:\\React__Samurai\\projects\\01\\my-app\\src\\API\\security-api.ts":"43","E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\appReducer.ts":"44","E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\authReducer.ts":"45","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx":"46","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Dialogs\\Dialogs.tsx":"47","E:\\React__Samurai\\projects\\01\\my-app\\src\\App.tsx":"48","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\News\\News.tsx":"49","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Music\\Music.tsx":"50","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Settings\\Settings.tsx":"51"},{"size":339,"mtime":1633526326341,"results":"52","hashOfConfig":"53"},{"size":362,"mtime":499162500000,"results":"54","hashOfConfig":"55"},{"size":500,"mtime":499162500000,"results":"56","hashOfConfig":"57"},{"size":362,"mtime":499162500000,"results":"58","hashOfConfig":"57"},{"size":228,"mtime":1610376971930,"results":"59","hashOfConfig":"57"},{"size":228,"mtime":1610376971930,"results":"60","hashOfConfig":"55"},{"size":969,"mtime":1633603547400,"results":"61","hashOfConfig":"53"},{"size":1010,"mtime":1633599144555,"results":"62","hashOfConfig":"53"},{"size":2038,"mtime":1633593418889,"results":"63","hashOfConfig":"53"},{"size":553,"mtime":1633593990450,"results":"64","hashOfConfig":"53"},{"size":3835,"mtime":1633594917135,"results":"65","hashOfConfig":"53"},{"size":1909,"mtime":1619683459324,"results":"66","hashOfConfig":"55"},{"size":4300,"mtime":1633599918861,"results":"67","hashOfConfig":"53"},{"size":1342,"mtime":1633440686374,"results":"68","hashOfConfig":"53"},{"size":814,"mtime":1633593580509,"results":"69","hashOfConfig":"53"},{"size":1218,"mtime":1633029475145,"results":"70","hashOfConfig":"53"},{"size":3692,"mtime":1633382179906,"results":"71","hashOfConfig":"53"},{"size":2457,"mtime":1633447027330,"results":"72","hashOfConfig":"53"},{"size":300,"mtime":1633603861076,"results":"73","hashOfConfig":"53"},{"size":2002,"mtime":1633591922618,"results":"74","hashOfConfig":"53"},{"size":936,"mtime":1633594774091,"results":"75","hashOfConfig":"53"},{"size":1289,"mtime":1633603547172,"results":"76","hashOfConfig":"53"},{"size":899,"mtime":1633377072780,"results":"77","hashOfConfig":"53"},{"size":2760,"mtime":1633599180852,"results":"78","hashOfConfig":"53"},{"size":750,"mtime":1632516954729,"results":"79","hashOfConfig":"53"},{"size":385,"mtime":1633023371943,"results":"80","hashOfConfig":"53"},{"size":1077,"mtime":1633608459331,"results":"81","hashOfConfig":"53"},{"size":749,"mtime":1633028076740,"results":"82","hashOfConfig":"53"},{"size":486,"mtime":1633371567236,"results":"83","hashOfConfig":"53"},{"size":1885,"mtime":1633458619455,"results":"84","hashOfConfig":"53"},{"size":1546,"mtime":1633604618693,"results":"85","hashOfConfig":"53"},{"size":1313,"mtime":1633595212120,"results":"86","hashOfConfig":"53"},{"size":1166,"mtime":1617823829219,"results":"87","hashOfConfig":"55"},{"size":270,"mtime":1633448087912,"results":"88","hashOfConfig":"53"},{"size":265,"mtime":1633603708116,"results":"89","hashOfConfig":"53"},{"size":430,"mtime":1633603787324,"results":"90","hashOfConfig":"53"},{"size":2038,"mtime":1633526326377,"results":"91","hashOfConfig":"53"},{"size":2706,"mtime":1633377021725,"results":"92","hashOfConfig":"53"},{"size":1102,"mtime":1633441741233,"results":"93","hashOfConfig":"53"},{"size":709,"mtime":1633371567242,"results":"94","hashOfConfig":"53"},{"size":806,"mtime":1633371669898,"results":"95","hashOfConfig":"53"},{"size":979,"mtime":1633380947250,"results":"96","hashOfConfig":"53"},{"size":267,"mtime":1633372476816,"results":"97","hashOfConfig":"53"},{"size":899,"mtime":1633377294483,"results":"98","hashOfConfig":"53"},{"size":2733,"mtime":1633380096092,"results":"99","hashOfConfig":"53"},{"size":587,"mtime":1633447220438,"results":"100","hashOfConfig":"53"},{"size":2145,"mtime":1633443195352,"results":"101","hashOfConfig":"53"},{"size":2421,"mtime":1633591922610,"results":"102","hashOfConfig":"53"},{"size":167,"mtime":1633606810637,"results":"103","hashOfConfig":"53"},{"size":171,"mtime":1633606810658,"results":"104","hashOfConfig":"53"},{"size":187,"mtime":1633606810617,"results":"105","hashOfConfig":"53"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"uixcj1",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},"fp78h3",{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7wzx3g",{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"108"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"108"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"108"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"108"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"108"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"108"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"108"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"108"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"108"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"108"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"108"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"218","usedDeprecatedRules":"108"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\React__Samurai\\projects\\01\\my-app\\src\\index.tsx",[],["225","226"],"E:\\React__Samurai\\projects\\01\\my-app\\src\\reportWebVitals.js",[],["227","228"],"e:\\React__Samurai\\projects\\01\\my-app\\src\\index.tsx",[],"e:\\React__Samurai\\projects\\01\\my-app\\src\\reportWebVitals.js",[],"e:\\React__Samurai\\projects\\01\\my-app\\src\\Header.js",["229","230","231"],"E:\\React__Samurai\\projects\\01\\my-app\\src\\Header.js",["232","233","234"],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Header\\Header.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Navbar\\Navbar.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["235"],"import React, {ChangeEvent, useState} from 'react'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport classes from './ProfileInfo.module.css'\r\nimport job__img from './../../../img/job.jpg'\r\nimport noJob__img from './../../../img/noJob.png'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\nimport user__img from '../../../img/users/user.png'\r\nimport ProfileDataForm from './ProfileDataForm'\r\nimport {ContactType, ProfileType} from '../../../types/Types'\r\n\r\n\r\ntype PropsType = {\r\n  profile: ProfileType | null\r\n  isOwner: boolean\r\n  status: string\r\n  savePhoto: (file: File) => void\r\n  saveProfile: (profile: ProfileType) => Promise<any>\r\n  updateUserStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileInfo: React.FC<PropsType> = (props) => {\r\n\r\n  const [editMode, setEditMode] = useState(false)\r\n\r\n  if (!props.profile) {\r\n    return <Preloader/>\r\n  }\r\n\r\n  const onSelectPhoto = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files?.length) {\r\n      props.savePhoto(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  const onSubmit = (formData: ProfileType) => {\r\n    props.saveProfile(formData).then(\r\n      () => setEditMode(false)\r\n    )\r\n  }\r\n\r\n  return <div>\r\n    <div className={classes.container}>\r\n\r\n      <div>\r\n        <img className={classes.userPhoto} src={props.profile.photos.large || user__img}/>\r\n        <div>\r\n          {props.isOwner && <label className={classes.labelInput}><input\r\n            type=\"file\" onChange={onSelectPhoto}/>choose a photo</label>}\r\n        </div>\r\n      </div>\r\n      {editMode\r\n        ? <ProfileDataForm initialValues={props.profile}\r\n                           onSubmit={onSubmit}\r\n                           profile={props.profile}\r\n        />\r\n        : <ProfileData profile={props.profile}\r\n                       isOwner={props.isOwner}\r\n                       status={props.status}\r\n                       updateUserStatus={props.updateUserStatus}\r\n                       onEditMode={() => setEditMode(true)}\r\n        />}\r\n    </div>\r\n\r\n    <div className={classes.cover}>\r\n      <img className={classes.cover__img} src=\"https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__340.jpg\"\r\n           alt=\"\"/>\r\n    </div>\r\n  </div>\r\n}\r\n\r\ntype ProfileDataProps = {\r\n  profile: ProfileType\r\n  status: string\r\n  isOwner: boolean\r\n  updateUserStatus: (status: string) => void\r\n  onEditMode: () => void\r\n}\r\n\r\nconst ProfileData: React.FC<ProfileDataProps> = (props) => {\r\n  return <div className={classes.description}>\r\n    <div>\r\n      <b>Name:</b> {props.profile.fullName}\r\n    </div>\r\n    <div>\r\n      <b>About me:</b> {props.profile.aboutMe}\r\n    </div>\r\n    <div>\r\n      <div className={classes.status}>\r\n        <ProfileStatusWithHooks\r\n          status={props.status}\r\n          updateUserStatus={props.updateUserStatus}\r\n          isOwner={props.isOwner}\r\n        />\r\n      </div>\r\n      <div className={classes.contacts}>\r\n        <b>Contacts:</b>\r\n        {Object.keys(props.profile.contacts).map(key => {\r\n          return <Contact\r\n            key={key} contactTitle={key} contactValue={props.profile.contacts[key as keyof ContactType]}/>\r\n        })}\r\n      </div>\r\n      <div>\r\n        <img src={props.profile.lookingForAJob ? job__img : noJob__img} alt=\"\"/>{}\r\n      </div>\r\n      {props.profile.lookingForAJob && <div>\r\n        <b>My professional skills:</b> {props.profile.lookingForAJobDescription}\r\n      </div>}\r\n    </div>\r\n    {props.isOwner && <div className={classes.btnSave}>\r\n      <button onClick={props.onEditMode}>edit</button>\r\n    </div>}\r\n  </div>\r\n}\r\n\r\ntype ContactProps = {\r\n  contactTitle: string\r\n  contactValue: string\r\n}\r\n\r\nconst Contact: React.FC<ContactProps> = ({contactTitle, contactValue}) => {\r\n  return <div className={classes.contact}><a href={contactValue}>{contactTitle}</a></div>\r\n}\r\n\r\nexport default ProfileInfo","E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\store.js",[],["236","237"],"E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\profileReducer.ts",["238"],"import {stopSubmit} from 'redux-form'\r\nimport {PhotosType, PostDataType, ProfileType} from '../types/Types'\r\nimport {AppStateType, BaseThunkType, InferActionsTypes} from './redux-store'\r\nimport {profileAPI} from '../API/profile-api'\r\n\r\n\r\nlet initialState = {\r\n  postsData: [\r\n    {id: 1, message: 'Why is it so difficult?', likesCount: 221},\r\n    {id: 2, message: 'I learn English sometimes', likesCount: 85},\r\n    {id: 3, message: 'Good morning night city ', likesCount: 4},\r\n    {id: 4, message: 'I played football every day ', likesCount: 33},\r\n    {id: 5, message: 'I\\'m twenty_five ', likesCount: 15},\r\n  ] as Array<PostDataType>,\r\n  profile: null as ProfileType | null,\r\n  userAva: null as string | null,\r\n  status: ''\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\ntype ActionsTypes = InferActionsTypes<typeof actionCreatorsProfile>\r\ntype ThunkType = BaseThunkType<ActionsTypes | ReturnType<typeof stopSubmit>>\r\n\r\nconst profileReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'ADD_POST': {\r\n      return {\r\n        ...state,\r\n        postsData: [...state.postsData, {id: 6, message: action.newMessage, likesCount: 0}]\r\n      }\r\n    }\r\n    case 'SET_PROFILE': {\r\n      return {...state, profile: action.profile}\r\n    }\r\n    case 'SET_USER_AVA': {\r\n      if (!action.profile) return {...state, userAva: null}\r\n      return {...state, userAva: action.profile.photos.small}\r\n    }\r\n    case 'SET_USER_STATUS': {\r\n      return {...state, status: action.status}\r\n    }\r\n    case 'DELETE_POST': {\r\n      return {...state, postsData: state.postsData.filter(post => post.id !== action.id)}\r\n    }\r\n    case 'SET_USER_PHOTO': {\r\n      return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const actionCreatorsProfile = {\r\n  addPostActionCreator: (newMessage: string) => {return {type: 'ADD_POST', newMessage} as const},\r\n  deletePost: (id: number) => {return {type: 'DELETE_POST', id} as const},\r\n  setProfile: (profile: ProfileType) => ({type: 'SET_PROFILE', profile} as const),\r\n  setUserAva: (profile: ProfileType | null) => ({type: 'SET_USER_AVA', profile} as const),\r\n  setUserStatus: (status: string) => ({type: 'SET_USER_STATUS', status} as const),\r\n  setUserPhoto: (photos: PhotosType) => ({type: 'SET_USER_PHOTO', photos} as const)\r\n}\r\n\r\nexport const getUserProfile = (userId: number | null): ThunkType => {\r\n  return async (dispatch) => {\r\n    const data = await profileAPI.getProfile(userId)\r\n    dispatch(actionCreatorsProfile.setProfile(data))\r\n  }\r\n}\r\n\r\nexport const getUserAva = (userId: number): ThunkType => {\r\n  return async (dispatch) => {\r\n    const response = await profileAPI.getProfile(userId)\r\n    dispatch(actionCreatorsProfile.setUserAva(response))\r\n  }\r\n}\r\n\r\nexport const getUserStatus = (userId: number): ThunkType => {\r\n  return async (dispatch) => {\r\n    const response = await profileAPI.getUserStatus(userId)\r\n    dispatch(actionCreatorsProfile.setUserStatus(response))\r\n  }\r\n}\r\n\r\nexport const updateUserStatus = (status: string): ThunkType => {\r\n  return async (dispatch) => {\r\n    const response = await profileAPI.updateUserStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(actionCreatorsProfile.setUserStatus(status))\r\n    }\r\n  }\r\n}\r\n\r\nexport const savePhoto = (file: File): ThunkType => {\r\n  return async (dispatch) => {\r\n    const response = await profileAPI.savePhoto(file)\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(actionCreatorsProfile.setUserPhoto(response.data.data.photos))\r\n    }\r\n  }\r\n}\r\n\r\nexport const saveProfile = (profile: ProfileType): ThunkType => {\r\n  return async (dispatch, getState) => {\r\n    const userId = getState().authUser.userId\r\n    const response = await profileAPI.saveProfile(profile)\r\n    if (response.data.resultCode === 0) {\r\n      if (userId !== null) {\r\n        dispatch(getUserProfile(userId))\r\n      } else {\r\n        throw new Error('userId can not be null')\r\n      }\r\n    } else {\r\n      let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n      dispatch(stopSubmit('editProfile', {_error: message}))\r\n      return Promise.reject(message)\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default profileReducer","E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\redux-store.ts",["239"],"import {Action, applyMiddleware, combineReducers, compose, createStore} from 'redux'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport dialogsReducer from \"./dialogsReducer\"\r\nimport profileReducer from \"./profileReducer\"\r\nimport usersReducer from \"./usersReducer\"\r\nimport AuthReducer from \"./authReducer\"\r\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk'\r\nimport appReducer from \"./appReducer\"\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n  dialogsPage: dialogsReducer,\r\n  profilePage: profileReducer,\r\n  usersPage: usersReducer,\r\n  authUser: AuthReducer,\r\n  form: formReducer,\r\n  app: appReducer\r\n})\r\n\r\ntype RootReducerType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\ntype PropertiesTypes<T> = T extends {[key: string]: infer U} ? U : never\r\nexport type InferActionsTypes<T> = T extends { [key: string]: (...args: any[]) => infer U } ? U : never\r\n\r\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore(rootReducer, composeEnhancers( (applyMiddleware(thunkMiddleware)) ))\r\n\r\n//let store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n\r\nexport default store","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["240"],"import {actionCreatorsProfile} from '../../../redux/profileReducer'\r\nimport MyPosts, {DispatchPropsFormType, MapPropsFormType} from './MyPosts'\r\nimport {connect} from 'react-redux'\r\nimport {reset} from 'redux-form'\r\nimport {AppStateType} from '../../../redux/redux-store'\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType) => ({\r\n  posts: state.profilePage.postsData,\r\n})\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     addPost: (postArea) => {\r\n//       dispatch(actionCreatorsProfile.addPostActionCreator(postArea))\r\n//       dispatch(reset('myPost'))\r\n//     }\r\n//   }\r\n// }\r\n\r\nconst MyPostsContainer = connect<MapPropsFormType, DispatchPropsFormType, {}, AppStateType>(mapStateToProps, {\r\n  addPost: actionCreatorsProfile.addPostActionCreator\r\n})(MyPosts)\r\n\r\nexport default MyPostsContainer","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Users\\Users.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\usersReducer.ts",["241"],"import {UserDataType} from '../types/Types'\r\nimport {AppStateType, BaseThunkType, InferActionsTypes} from './redux-store'\r\nimport {usersAPI} from '../API/users-api'\r\n\r\n\r\nlet initialState = {\r\n  usersData: [] as Array<UserDataType>,\r\n  usersOnPage: 20,\r\n  totalUsers: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followInProgress: [] as Array<number>,\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\ntype ActionsTypes = InferActionsTypes<typeof actionCreators>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\n\r\nconst usersReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'FOLLOW':\r\n      return {\r\n        ...state,\r\n        usersData: state.usersData.map(u => {\r\n          if (u.id === action.userId) {\r\n            return {...u, followed: true}\r\n          }\r\n          return u\r\n        })\r\n      }\r\n    case 'UNFOLLOW':\r\n      return {\r\n        ...state,\r\n        usersData: state.usersData.map(u => {\r\n          if (u.id === action.userId) {\r\n            return {...u, followed: false}\r\n          }\r\n          return u\r\n        })\r\n      }\r\n    case 'SET_USERS':\r\n      return {\r\n        ...state,\r\n        usersData: [...action.users]\r\n      }\r\n    case 'SET_CURRENT_PAGE' :\r\n      return {\r\n        ...state,\r\n        currentPage: action.page\r\n      }\r\n    case 'SET_TOTAL_USERS' :\r\n      return {\r\n        ...state,\r\n        totalUsers: action.usersCount\r\n      }\r\n    case 'SET_TOGGLE' :\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching\r\n      }\r\n    case 'SET_TOGGLE_FOLLOW':\r\n      return {\r\n        ...state,\r\n        followInProgress: action.isFetching\r\n          ? [...state.followInProgress, action.userId]\r\n          : state.followInProgress.filter(id => id !== action.userId)\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const actionCreators = {\r\n  followSuccess: (userId: number) => ({type: 'FOLLOW', userId} as const),\r\n  unfollowSuccess: (userId: number) => ({type: 'UNFOLLOW', userId} as const),\r\n  setUsers: (users: Array<UserDataType>) => ({type: 'SET_USERS', users} as const),\r\n  setCurrentPage: (page: number) => ({type: 'SET_CURRENT_PAGE', page} as const),\r\n  setTotalUsers: (usersCount: number) => ({type: 'SET_TOTAL_USERS', usersCount} as const),\r\n  setToggle: (isFetching: boolean) => ({type: 'SET_TOGGLE', isFetching} as const),\r\n  setToggleFollow: (isFetching: boolean, userId: number) => ({type: 'SET_TOGGLE_FOLLOW', isFetching, userId} as const)\r\n}\r\n\r\n\r\nexport const getUsers = (page: number, usersOnPage: number): ThunkType => {\r\n  return async (dispatch) => {\r\n    dispatch(actionCreators.setToggle(true))\r\n    dispatch(actionCreators.setCurrentPage(page))\r\n    const data = await usersAPI.getUsers(page, usersOnPage)\r\n    dispatch(actionCreators.setUsers(data.items))\r\n    dispatch(actionCreators.setTotalUsers(data.totalCount))\r\n    dispatch(actionCreators.setToggle(false))\r\n  }\r\n}\r\n\r\nexport const follow = (userId: number): ThunkType => {\r\n  return async (dispatch) => {\r\n    dispatch(actionCreators.setToggleFollow(true, userId))\r\n    const data = await usersAPI.follow(userId)\r\n    if (data.resultCode === 0) {\r\n      dispatch(actionCreators.followSuccess(userId))\r\n    }\r\n    dispatch(actionCreators.setToggleFollow(false, userId))\r\n  }\r\n}\r\n\r\nexport const unfollow = (userId: number): ThunkType => {\r\n  return async (dispatch) => {\r\n    dispatch(actionCreators.setToggleFollow(true, userId))\r\n    const data = await usersAPI.unfollow(userId)\r\n    if (data.resultCode === 0) {\r\n      dispatch(actionCreators.unfollowSuccess(userId))\r\n    }\r\n    dispatch(actionCreators.setToggleFollow(false, userId))\r\n  }\r\n}\r\n\r\nexport default usersReducer\r\n\r\n","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Users\\UsersContainer.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\common\\Preloader\\Preloader.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\ProfileContainer.tsx",["242"],"import React from 'react'\r\nimport Profile from './Profile'\r\nimport {connect} from 'react-redux'\r\nimport {getUserProfile, getUserStatus, savePhoto, updateUserStatus, saveProfile} from '../../redux/profileReducer'\r\nimport {Redirect, RouteComponentProps, withRouter} from 'react-router-dom'\r\nimport {withAuthRedirect} from '../HOC/withAuthRedirect'\r\nimport {compose} from 'redux'\r\nimport {AppStateType} from '../../redux/redux-store'\r\nimport {ProfileType} from '../../types/Types'\r\n\r\n\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>\r\ntype DispatchPropsType = {\r\n  getUserProfile: (userId: number) => void\r\n  getUserStatus: (userId: number) => void\r\n  savePhoto: (file: File) => void\r\n  saveProfile: (profile: ProfileType) => Promise<any>\r\n  updateUserStatus: (status: string) => void\r\n}\r\ntype PathParamsType = {\r\n  userId: string\r\n}\r\n\r\ntype PropsType = MapPropsType & DispatchPropsType & RouteComponentProps<PathParamsType>\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n  refreshProfile () {\r\n    let userId: number | null = +this.props.match.params.userId\r\n    if (!userId) userId = this.props.userId\r\n    if (!userId)  this.props.history.push('/login')\r\n    this.props.getUserProfile(userId as number)\r\n    this.props.getUserStatus(userId as number)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile()\r\n  }\r\n\r\n  componentDidUpdate(prevProps: PropsType) {\r\n    if(this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <Profile {...this.props}\r\n      isOwner={!this.props.match.params.userId}\r\n    />\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  userId: state.authUser.userId,\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile}),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\Profile.tsx",["243"],"import React from 'react'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\nimport {ProfileType} from '../../types/Types'\r\nimport {AppStateType} from '../../redux/redux-store'\r\n\r\ntype PropsType = {\r\n  profile: ProfileType | null\r\n  isOwner: boolean\r\n  status: string\r\n  savePhoto: (file: File) => void\r\n  saveProfile: (profile: ProfileType) => Promise<any>\r\n  updateUserStatus: (status: string) => void\r\n}\r\n\r\n\r\nconst Profile: React.FC<PropsType> = (props) => {\r\n\r\n  return <div>\r\n    <ProfileInfo\r\n      profile={props.profile}\r\n      status={props.status}\r\n      updateUserStatus={props.updateUserStatus}\r\n      isOwner={props.isOwner}\r\n      savePhoto={props.savePhoto}\r\n      saveProfile={props.saveProfile}\r\n    />\r\n    {/*{props.isOwner && <MyPostsContainer store={props.store} />}*/}\r\n    {props.isOwner && <MyPostsContainer />}\r\n  </div>\r\n}\r\n\r\nexport default Profile","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Header\\HeaderContainer.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\AppReducer.ts",[],["244","245"],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Login\\Login.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\usersSelectors.ts",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\utilities\\validators.ts",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\HOC\\withAuthRedirect.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\common\\FormsControl\\FormsControl.tsx",["246"],"import styles from './FormsControl.module.css'\r\nimport React from \"react\"\r\nimport {WrappedFieldInputProps, WrappedFieldMetaProps} from \"redux-form\"\r\n\r\n\r\ntype ElementPropsType = {\r\n  meta: WrappedFieldMetaProps\r\n  //input: WrappedFieldInputProps\r\n  input: {}\r\n\r\n}\r\n\r\ntype ElementType = (props: ElementPropsType) => React.ReactNode\r\n\r\nexport const Element = (Element: string): ElementType => ({input, meta, ...props}) => {\r\n  const hasError = meta.touched && meta.error\r\n  // @ts-ignore\r\n  return (\r\n    <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n      <div >\r\n        {hasError ? <span className={styles.messageError}>{hasError}</span> : ''}\r\n      </div>\r\n      <Element {...input} {...props} />\r\n    </div>\r\n  )\r\n}","E:\\React__Samurai\\projects\\01\\my-app\\src\\API\\api.ts",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Users\\User.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Users\\Paginator.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx",[],["247","248"],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\HOC\\withSuspense.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\AuthReducer.ts",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\dialogsReducer.ts",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\API\\users-api.ts",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\API\\auth-api.ts",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\API\\profile-api.ts",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\API\\security-api.ts",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\appReducer.ts",["249","250"],"import {getAuthUser} from './authReducer'\r\nimport {ThunkAction} from 'redux-thunk'\r\nimport {AppStateType, BaseThunkType, InferActionsTypes} from './redux-store'\r\n\r\n\r\nlet initialState = {\r\n  initialized: false\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\ntype ActionsTypes = InferActionsTypes<typeof actionCreators>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\n\r\nconst appReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'SET__INITIALIZED': {\r\n      return {...state, initialized: true}\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const actionCreators = {\r\n  setInitialized : () => ({type: 'SET__INITIALIZED'} as const)\r\n}\r\n\r\nexport const initializeApp = (): ThunkType => async (dispatch: any) => {\r\n  await dispatch(getAuthUser())\r\n  dispatch(actionCreators.setInitialized())\r\n}\r\n\r\nexport default appReducer","E:\\React__Samurai\\projects\\01\\my-app\\src\\redux\\authReducer.ts",["251","252"],"import {ResultCodesEnum, ResultCodeWithCaptchaEnum} from '../API/api'\r\nimport {stopSubmit} from 'redux-form'\r\nimport {actionCreatorsProfile} from './profileReducer'\r\nimport {ThunkAction} from 'redux-thunk'\r\nimport {AppStateType, BaseThunkType, InferActionsTypes} from './redux-store'\r\nimport {authAPI} from '../API/auth-api'\r\nimport {securityAPI} from '../API/security-api'\r\n\r\n\r\ntype InitialStateType = typeof initialState\r\ntype ActionsTypes = InferActionsTypes<typeof actionCreators>\r\ntype ThunkType = BaseThunkType<ActionsTypes | ReturnType<typeof stopSubmit>>\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  login: null,\r\n  email: null,\r\n  isAuth: false,\r\n  captchaUrl: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'AUTH__USER':\r\n    case 'CAPTCHA__URL': {\r\n      // @ts-ignore\r\n      return {...state, ...action.data}\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const actionCreators = {\r\n  setAuthUser : (userId: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n    type: 'AUTH__USER',\r\n    data: {userId, email, login, isAuth}\r\n  } as const),\r\n  setCaptchaUrl : (captchaUrl: string | null) => ({\r\n    type: 'CAPTCHA__URL',\r\n    data: {captchaUrl}\r\n  } as const)\r\n}\r\n\r\nexport const getAuthUser = (): ThunkType => {\r\n  return async (dispatch) => {\r\n    const data = await authAPI.getAuth()\r\n    if (!data.resultCode) {\r\n      let {id, email, login} = data.data\r\n      dispatch(actionCreators.setAuthUser(id, email, login, true))\r\n    }\r\n  }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string): ThunkType => {\r\n  return async (dispatch) => {\r\n    const response = await authAPI.login(email, password, rememberMe, captcha)\r\n    if (response.resultCode === ResultCodesEnum.Success) {\r\n      dispatch(getAuthUser())\r\n    } else {\r\n      if (response.resultCode === ResultCodeWithCaptchaEnum.WithCaptcha) dispatch(getCaptchaUrl())\r\n      let message = response.messages.length > 0 ? response.messages[0] : 'Some error'\r\n      dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n  }\r\n}\r\n\r\nexport const getCaptchaUrl = (): ThunkType => {\r\n  return async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = response.url\r\n    dispatch(actionCreators.setCaptchaUrl(captchaUrl))\r\n  }\r\n}\r\n\r\nexport const logout = (): ThunkType => {\r\n  return async (dispatch) => {\r\n    const response = await authAPI.logout()\r\n    if (!response.resultCode) {\r\n      dispatch(actionCreators.setAuthUser(null, null, null, false))\r\n      dispatch(actionCreatorsProfile.setUserAva(null))\r\n    }\r\n  }\r\n}\r\n\r\nexport default authReducer","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx",["253"],"import React from 'react'\r\nimport {actionCreators} from '../../redux/dialogsReducer'\r\nimport Dialogs from './Dialogs'\r\nimport {connect} from 'react-redux'\r\nimport {withAuthRedirect} from '../HOC/withAuthRedirect'\r\nimport {compose} from 'redux'\r\nimport {reset} from 'redux-form'\r\nimport {AppStateType} from '../../redux/redux-store'\r\n\r\nlet mapStateToProps = (state: AppStateType) => ({\r\n  dialogsPage: state.dialogsPage,\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect(mapStateToProps, {\r\n    newMessageAC: actionCreators.newMessageAC\r\n  }),\r\n  withAuthRedirect\r\n)(Dialogs)","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Dialogs\\Dialogs.tsx",[],"E:\\React__Samurai\\projects\\01\\my-app\\src\\App.tsx",["254"],"﻿import './App.css'\r\nimport Navbar from './components/Navbar/Navbar'\r\nimport Music from './components/Music/Music'\r\nimport News from './components/News/News'\r\nimport Settings from './components/Settings/Settings'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport React, { Component } from 'react'\r\nimport UsersContainer from './components/Users/UsersContainer'\r\nimport HeaderContainer from './components/Header/HeaderContainer'\r\nimport LoginPage from './components/Login/Login'\r\nimport { connect } from 'react-redux'\r\nimport { initializeApp } from './redux/appReducer'\r\nimport Preloader from './components/common/Preloader/Preloader'\r\nimport { withSuspense } from './components/HOC/withSuspense'\r\nimport {AppStateType} from './redux/redux-store'\r\n\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\r\n\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>\r\ntype DispatchPropsType = {initializeApp: () => void}\r\n\r\nconst SuspendedDialogs = withSuspense(DialogsContainer)\r\nconst SuspendedProfile = withSuspense(ProfileContainer)\r\n\r\nclass App extends Component <MapPropsType & DispatchPropsType> {\r\n  componentDidMount() {\r\n    this.props.initializeApp()\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initialized) return <Preloader />\r\n\r\n\r\n    return (\r\n      <div className=\"app-wrapper\">\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <div className=\"app-wrapper-content\">\r\n          <Switch>\r\n            <Route exact path=\"/\" render={() => <Redirect to=\"/profile\" />} />\r\n            <Route path=\"/dialogs\" render={() => <SuspendedDialogs /> }/>\r\n            <Route path=\"/profile/:userId?\" render={() => <SuspendedProfile />}\r\n            />\r\n            <Route path=\"/users\" render={() => <UsersContainer />} />\r\n            <Route path=\"/login\" render={() => <LoginPage />} />\r\n            <Route path=\"/music\" component={Music} />\r\n            <Route path=\"/news\" component={News} />\r\n            <Route path=\"/settings\" component={Settings} />\r\n            <Route path=\"*\" render={() => <div>404 page not found</div>} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n  initialized: state.app.initialized,\r\n})\r\n\r\nexport default connect(mapStateToProps, { initializeApp })(App)\r\n\r\n","E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\News\\News.tsx",["255"],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Music\\Music.tsx",["256"],"E:\\React__Samurai\\projects\\01\\my-app\\src\\components\\Settings\\Settings.tsx",["257"],{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","replacedBy":"261"},{"ruleId":"258","replacedBy":"262"},{"ruleId":"260","replacedBy":"263"},{"ruleId":"264","severity":1,"message":"265","line":5,"column":13,"nodeType":"266","endLine":5,"endColumn":24},{"ruleId":"264","severity":1,"message":"265","line":6,"column":13,"nodeType":"266","endLine":6,"endColumn":24},{"ruleId":"264","severity":1,"message":"265","line":7,"column":13,"nodeType":"266","endLine":7,"endColumn":24},{"ruleId":"264","severity":1,"message":"265","line":5,"column":13,"nodeType":"266","endLine":5,"endColumn":24},{"ruleId":"264","severity":1,"message":"265","line":6,"column":13,"nodeType":"266","endLine":6,"endColumn":24},{"ruleId":"264","severity":1,"message":"265","line":7,"column":13,"nodeType":"266","endLine":7,"endColumn":24},{"ruleId":"267","severity":1,"message":"268","line":45,"column":9,"nodeType":"266","endLine":45,"endColumn":91},{"ruleId":"258","replacedBy":"269"},{"ruleId":"260","replacedBy":"270"},{"ruleId":"271","severity":1,"message":"272","line":3,"column":9,"nodeType":"273","messageId":"274","endLine":3,"endColumn":21},{"ruleId":"271","severity":1,"message":"275","line":23,"column":6,"nodeType":"273","messageId":"274","endLine":23,"endColumn":21},{"ruleId":"271","severity":1,"message":"276","line":4,"column":9,"nodeType":"273","messageId":"274","endLine":4,"endColumn":14},{"ruleId":"271","severity":1,"message":"272","line":2,"column":9,"nodeType":"273","messageId":"274","endLine":2,"endColumn":21},{"ruleId":"271","severity":1,"message":"277","line":5,"column":9,"nodeType":"273","messageId":"274","endLine":5,"endColumn":17},{"ruleId":"271","severity":1,"message":"272","line":5,"column":9,"nodeType":"273","messageId":"274","endLine":5,"endColumn":21},{"ruleId":"258","replacedBy":"278"},{"ruleId":"260","replacedBy":"279"},{"ruleId":"271","severity":1,"message":"280","line":3,"column":9,"nodeType":"273","messageId":"274","endLine":3,"endColumn":31},{"ruleId":"258","replacedBy":"281"},{"ruleId":"260","replacedBy":"282"},{"ruleId":"271","severity":1,"message":"283","line":2,"column":9,"nodeType":"273","messageId":"274","endLine":2,"endColumn":20},{"ruleId":"271","severity":1,"message":"272","line":3,"column":9,"nodeType":"273","messageId":"274","endLine":3,"endColumn":21},{"ruleId":"271","severity":1,"message":"283","line":4,"column":9,"nodeType":"273","messageId":"274","endLine":4,"endColumn":20},{"ruleId":"271","severity":1,"message":"272","line":5,"column":9,"nodeType":"273","messageId":"274","endLine":5,"endColumn":21},{"ruleId":"271","severity":1,"message":"276","line":7,"column":9,"nodeType":"273","messageId":"274","endLine":7,"endColumn":14},{"ruleId":"284","severity":1,"message":"285","line":1,"column":1,"nodeType":"286","messageId":"287","fix":"288"},{"ruleId":"271","severity":1,"message":"289","line":2,"column":8,"nodeType":"273","messageId":"274","endLine":2,"endColumn":15},{"ruleId":"271","severity":1,"message":"289","line":2,"column":8,"nodeType":"273","messageId":"274","endLine":2,"endColumn":15},{"ruleId":"271","severity":1,"message":"289","line":2,"column":8,"nodeType":"273","messageId":"274","endLine":2,"endColumn":15},"no-native-reassign",["290"],"no-negated-in-lhs",["291"],["290"],["291"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["290"],["291"],"@typescript-eslint/no-unused-vars","'AppStateType' is defined but never used.","Identifier","unusedVar","'PropertiesTypes' is defined but never used.","'reset' is defined but never used.","'Redirect' is defined but never used.",["290"],["291"],"'WrappedFieldInputProps' is defined but never used.",["290"],["291"],"'ThunkAction' is defined but never used.","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"292","text":"293"},"'classes' is defined but never used.","no-global-assign","no-unsafe-negation",[-1,0],""]